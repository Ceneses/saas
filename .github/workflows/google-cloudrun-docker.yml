# 谷歌云github-actions部署云端服务模板
#
# 参数
# 1. PROJECT_ID: Google Cloud project id
# 2. SERVICE: Cloud Run service name
# 3. GAR_LOCATION: Artifact Registry location
# 4. ARIFACT_REPOSITORY: Artifact Registry repository name - which environment to deploy to
# 5. REGION: Cloud Run Deploy service region
# 6. VERSION: Cloud Run service version
# 密文
# 1. WIF_PROVIDER: Workload Identity Federation provider
# 2. WIF_SERVICE_ACCOUNT: Workload Identity Federation service account
# 3. SERVICE_ACCOUNT_KEY: Service account key file json content
#
name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: projectone-400611 # Google Cloud project id
  SERVICE: saas # Cloud Run service name
  GAR_LOCATION: us-central1 # Artifact Registry location
  ARTIFACT_REPOSITORY: dev # Artifact Registry repository name - development environment
  REGION: us-central1 # Cloud Run service region
  VERSION: 1.0.0 # Cloud Run service version

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      # [后端项目]Setup Java & Build with Maven
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adopt'
#
#      - name: Build with Maven
#        run: mvn clean install

      # [前端项目]依赖安装 & 项目编译
      - name:  Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Configure Docker
        run: |
          gcloud --quiet auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build --file Dockerfile -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/${{ env.SERVICE }}:${{ env.VERSION }} .

      - name: Push Docker image to Google Container Registry
        run: |
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/${{ env.SERVICE }}:${{ env.VERSION }}

      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/${{ env.SERVICE }}:${{ env.VERSION }} --platform managed --region ${{ env.REGION }} --allow-unauthenticated